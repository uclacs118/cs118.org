---
let secondSlash = Astro.url.pathname.slice(1).indexOf("/");
secondSlash = secondSlash == -1 ? Astro.url.pathname.length - 1 : secondSlash;
const rootPage = Astro.url.pathname.slice(0, secondSlash + 1);

const links = [
    ["/", "Syllabus", "newspaper"],
    ["/schedule", "Schedule", "calendar"],
    ["/homeworks", "Homeworks", "create"],
    ["/projects", "Projects", "construct"],
    ["/exams", "Exams", "school"],
    ["https://www.gradescope.com/courses/936926", "Gradescope", "podium"],
    ["https://bruinlearn.ucla.edu/courses/198858", "Bruin Learn", "flag"],
    ["https://piazza.com/class/m5g1f7krow37l2", "Piazza", "chatbubbles"],
    ["https://ctf.cs118.org", "Platform", "trophy"],
];
---

<div class="expandbutton">
    <a href="#"
        ><ion-icon name="chevron-forward-circle" size="large">&gt;</ion-icon></a
    >
</div>

<nav>
    <div class="buttons">
        <noscript>
            <style>
                .darkbutton {
                    display: none;
                }
            </style>
        </noscript>
        <div class="darkbutton">
            <a onclick="setMode(!darkMode)"
                ><ion-icon name="sunny" size="large"></ion-icon></a
            >
        </div>
        <div class="collapsebutton">
            <a href="#nonav"
                ><ion-icon name="chevron-back-circle" size="large"
                    >&lt;</ion-icon
                ></a
            >
        </div>
    </div>
    <div class="head">
        <img src="/favicon.png" />
        <div>
            <h1>CS 118</h1>
            <h2>Computer Network Fundamentals</h2>
        </div>
    </div>

    <div class="links">
        <ul>
            {
                links.map(([link, name, icon]) => {
                    if (link == rootPage) {
                        return (
                            <a href={link}>
                                <li style="color: var(--acc); font-weight: bolder;">
                                    <ion-icon name={icon} size="large" />
                                    <span>{name}</span>
                                </li>
                            </a>
                        );
                    } else {
                        return (
                            <a href={link} style="color: var(--fg)">
                                <li>
                                    <ion-icon
                                        name={icon + "-outline"}
                                        size="large"
                                    />
                                    <span>{name}</span>
                                </li>
                            </a>
                        );
                    }
                })
            }
        </ul>
    </div>
</nav>

<style>
    :root {
        /* &:target { */
            --hsize: 0vw;
            /* .expandbutton { */
            /*     display: block; */
            /* } */

            nav {
                display: none;
            }
        /* } */

        /* &:not(:target) { */
        /*     --hsize: 20%; */
        /*  */
        /*     @media (max-width: 1024px) { */
        /*         --hsize: 30%; */
        /*     } */
        /*  */
        /*     @media (max-width: 768px) { */
        /*         --hsize: 40%; */
        /*     } */
        /*  */
        /*     .expandbutton { */
        /*         display: none; */
        /*     } */
        /*  */
        /*     nav { */
        /*         display: block; */
        /*     } */
        /* } */
    }
</style>

<style>
    .expandbutton {
        position: fixed;
        left: 1rem;
        top: 1rem;
        display: none;
        z-index: 100;
        color: var(--acc);
    }

    nav {
        position: fixed;
        top: 0;
        left: 0;
        width: var(--hsize);
        height: 100%;
        box-sizing: border-box;
        padding: 1rem;
        border-right: 2px solid var(--fg);
        overflow-y: auto; 
        overflow-wrap: break-word;
        overflow-x: clip;
        z-index: 50;
        background: var(--bg);

        .buttons {
            display: flex;
            flex-flow: row;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            color: var(--acc);
        }

        .head {
            display: flex;
            flex-flow: row;
            justify-content: flex-start;
            align-items: center;

            img {
                width: 3rem;
                padding-right: 1rem;
                min-width: 0;
            }

            h1 {
                margin: 0;
                color: var(--acc);
            }

            h2 {
                margin: 0;
                font-size: 1rem;
            }
        }

        .links {
            margin-top: 2rem;
            ul {
                list-style: none;
                padding: 0;

                li {
                    padding-top: 0.5rem;
                    padding-bottom: 0.5rem;
                    display: flex;
                    flex-flow: row wrap;
                    justify-content: flex-start;
                    align-items: center;
                    gap: 0.5rem;
                    border-top: 1px solid var(--alt);
                    
                    span {
                        hyphens: auto;
                        min-width: 0;
                    }
                }
                li:first-of-type {
                    border-top: none;
                } 
            }
        }
    }

    @media (max-width: 512px) {
        nav {
            .head {
                display: block;
            }
        }
    }
</style>
